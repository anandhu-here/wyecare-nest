import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import { Document, Schema as MongooseSchema } from 'mongoose';

export type FCMTokenDocument = FCMToken & Document;

@Schema({ timestamps: true })
export class FCMToken {
  @Prop({
    type: MongooseSchema.Types.ObjectId,
    ref: 'User',
    required: true,
    index: true,
  })
  user!: MongooseSchema.Types.ObjectId;

  @Prop({ required: true, index: true })
  token!: string;

  @Prop({ type: Object })
  device!: {
    platform: string;
    model?: string;
    osVersion?: string;
    appVersion?: string;
    identifier?: string;
  };

  @Prop({ default: true, index: true })
  isActive!: boolean;

  @Prop()
  deactivatedAt?: Date;

  // Auto-generated by timestamps
  createdAt?: Date;
  updatedAt?: Date;
}

export const FCMTokenSchema = SchemaFactory.createForClass(FCMToken);

// Create composite index for efficient queries
FCMTokenSchema.index({ user: 1, isActive: 1 });
FCMTokenSchema.index({ token: 1, isActive: 1 }, { unique: true });
